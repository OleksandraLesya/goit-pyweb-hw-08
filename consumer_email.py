import pika
import json
from models import Contact # –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –º–æ–¥–µ–ª—å Contact
import connect # noqa: –¶–µ —ñ–º–ø–æ—Ä—Ç—É—î –Ω–∞—à connect.py, —è–∫–∏–π —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ MongoDB Atlas
import configparser # –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –º–æ–¥—É–ª—å –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ–π–Ω–∏–º–∏ —Ñ–∞–π–ª–∞–º–∏
# from mongoengine import connect as mongo_connect # –¶–µ–π —ñ–º–ø–æ—Ä—Ç –±—ñ–ª—å—à–µ –Ω–µ –ø–æ—Ç—Ä—ñ–±–µ–Ω, –æ—Å–∫—ñ–ª—å–∫–∏ –º–∏ –≤–∏–¥–∞–ª–∏–ª–∏ —è–≤–Ω–∏–π –±–ª–æ–∫ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è

# –ß–∏—Ç–∞–Ω–Ω—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó –∑ config.ini
config = configparser.ConfigParser()
config.read('config.ini')

# –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤ RabbitMQ –∑ config.ini
rabbit_host = config.get('RABBITMQ', 'host')
email_queue_name = config.get('RABBITMQ', 'email_queue')

def callback(ch, method, properties, body):
    """
    –§—É–Ω–∫—Ü—ñ—è –∑–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ –≤–∏–∫–ª–∏–∫—É, —è–∫–∞ –æ–±—Ä–æ–±–ª—è—î –æ—Ç—Ä–∏–º–∞–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ —á–µ—Ä–≥–∏.
    """
    try:
        # –†–æ–∑–ø–∞—Ä—Å–∏–º–æ JSON-—Ä—è–¥–æ–∫ –∑ —Ç—ñ–ª–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ Python-—Å–ª–æ–≤–Ω–∏–∫
        contact_data = json.loads(body)
        contact_id = contact_data.get("contact_id") # –û—Ç—Ä–∏–º—É—î–º–æ 'contact_id'

        if not contact_id:
            print(f"–ü–æ–º–∏–ª–∫–∞: –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–µ –º—ñ—Å—Ç–∏—Ç—å 'contact_id': {body.decode('utf-8')}")
            ch.basic_ack(method.delivery_tag) # –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂—É—î–º–æ, —â–æ–± –≤–∏–¥–∞–ª–∏—Ç–∏ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
            return

        # –ó–Ω–∞—Ö–æ–¥–∏–º–æ –∫–æ–Ω—Ç–∞–∫—Ç —É MongoDB –∑–∞ –π–æ–≥–æ ObjectID
        # MongoEngine –º–æ–∂–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∫–æ–Ω–≤–µ—Ä—Ç—É–≤–∞—Ç–∏ —Ä—è–¥–æ–∫ ObjectID —É –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏–π —Ç–∏–ø
        contact = Contact.objects(id=contact_id).first()

        if contact:
            if not contact.is_sent: # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —â–µ –Ω–µ –±—É–ª–æ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ
                print(f"üì© –Ü–º—ñ—Ç–∞—Ü—ñ—è –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è EMAIL –¥–æ {contact.full_name} –Ω–∞ {contact.email}")
                # –§—É–Ω–∫—Ü—ñ—è-–∑–∞–≥–ª—É—à–∫–∞: —Ç—É—Ç –º–æ–≥–ª–∞ –± –±—É—Ç–∏ —Ä–µ–∞–ª—å–Ω–∞ –ª–æ–≥—ñ–∫–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ email
                # –Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –∑–∞—Ç—Ä–∏–º–∫–∞ —á–∞—Å—É: time.sleep(1)

                # –û–Ω–æ–≤–ª—é—î–º–æ –ø–æ–ª–µ is_sent –Ω–∞ True –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö
                contact.update(is_sent=True)
                print(f"   ‚úÖ –°—Ç–∞—Ç—É—Å EMAIL –¥–ª—è {contact.full_name} –æ–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ '–Ω–∞–¥—ñ—Å–ª–∞–Ω–æ'.")
            else:
                print(f"   ‚ÑπÔ∏è EMAIL –¥–ª—è {contact.full_name} –≤–∂–µ –±—É–≤ –Ω–∞–¥—ñ—Å–ª–∞–Ω–∏–π —Ä–∞–Ω—ñ—à–µ.")
        else:
            print(f"   ‚ùå –ö–æ–Ω—Ç–∞–∫—Ç –∑ ID {contact_id} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö.")

        # –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂—É—î–º–æ, —â–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –±—É–ª–æ —É—Å–ø—ñ—à–Ω–æ –æ–±—Ä–æ–±–ª–µ–Ω–æ
        # –¶–µ –≤–∏–¥–∞–ª—è—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ —á–µ—Ä–≥–∏ RabbitMQ
        ch.basic_ack(method.delivery_tag)

    except json.JSONDecodeError:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –¥–µ–∫–æ–¥—É–≤–∞–Ω–Ω—è JSON: {body.decode('utf-8')}")
        ch.basic_ack(method.delivery_tag) # –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂—É—î–º–æ, —â–æ–± –≤–∏–¥–∞–ª–∏—Ç–∏ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    except Exception as e:
        print(f"‚ùå –ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")
        print(f"   –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {body.decode('utf-8')}")
        # –Ø–∫—â–æ –≤–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞, –º–æ–∂–Ω–∞ –≤—ñ–¥—Ö–∏–ª–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è (basic_nack)
        # –∞–±–æ –ø–µ—Ä–µ–º—ñ—Å—Ç–∏—Ç–∏ –π–æ–≥–æ –≤ —á–µ—Ä–≥—É "–º–µ—Ä—Ç–≤–∏—Ö –ª–∏—Å—Ç—ñ–≤" (Dead Letter Queue) –¥–ª—è –ø–æ–¥–∞–ª—å—à–æ–≥–æ –∞–Ω–∞–ª—ñ–∑—É.
        # –î–ª—è –ø—Ä–æ—Å—Ç–æ—Ç–∏, –ø–æ–∫–∏ —â–æ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂—É—î–º–æ, —â–æ–± –Ω–µ –∑–∞–±–ª–æ–∫—É–≤–∞—Ç–∏ —á–µ—Ä–≥—É.
        ch.basic_ack(method.delivery_tag)


# –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ RabbitMQ
try:
    connection = pika.BlockingConnection(pika.ConnectionParameters(host=rabbit_host))
    channel = connection.channel()
    print(f"‚úÖ –£—Å–ø—ñ—à–Ω–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–æ –¥–æ RabbitMQ –Ω–∞ —Ö–æ—Å—Ç—ñ: {rabbit_host}")
except pika.exceptions.AMQPConnectionError as e:
    print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ RabbitMQ: {e}")
    print("–ë—É–¥—å –ª–∞—Å–∫–∞, –ø–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ RabbitMQ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω–∏–π (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, —á–µ—Ä–µ–∑ Docker).")
    exit(1)

# –û–≥–æ–ª–æ—à–µ–Ω–Ω—è —á–µ—Ä–≥–∏ (–ø–æ–≤–∏–Ω–Ω–∞ –±—É—Ç–∏ —Ç–∞–∫–æ—é –∂, —è–∫ —ñ –≤ producer)
channel.queue_declare(queue=email_queue_name, durable=True)

# –í–∫–∞–∑—É—î–º–æ RabbitMQ, —â–æ —Ü–µ–π consumer –±—É–¥–µ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –¥–∞–Ω–æ—ó —á–µ—Ä–≥–∏
# on_message_callback: —Ñ—É–Ω–∫—Ü—ñ—è, —è–∫–∞ –±—É–¥–µ –≤–∏–∫–ª–∏–∫–∞–Ω–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
# auto_ack=False: –º–∏ –±—É–¥–µ–º–æ –≤—Ä—É—á–Ω—É –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂—É–≤–∞—Ç–∏ –æ–±—Ä–æ–±–∫—É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è (ch.basic_ack)
# –¶–µ –∫—Ä–∞—â–µ, –Ω—ñ–∂ auto_ack=True, –±–æ –≥–∞—Ä–∞–Ω—Ç—É—î, —â–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–µ –∑–∞–≥—É–±–∏—Ç—å—Å—è,
# —è–∫—â–æ –æ–±—Ä–æ–±–∫–∞ –∑–∞–≤–µ—Ä—à–∏—Ç—å—Å—è –ø–æ–º–∏–ª–∫–æ—é –¥–æ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è.
channel.basic_consume(queue=email_queue_name, on_message_callback=callback, auto_ack=False)

print(f"\n[*] –û—á—ñ–∫—É–≤–∞–Ω–Ω—è EMAIL –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –∑ —á–µ—Ä–≥–∏ '{email_queue_name}'. –î–ª—è –≤–∏—Ö–æ–¥—É –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å CTRL+C")
# –ó–∞–ø—É—Å–∫–∞—î–º–æ –Ω–µ—Å–∫—ñ–Ω—á–µ–Ω–Ω–∏–π —Ü–∏–∫–ª, —è–∫–∏–π —á–µ–∫–∞—î –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
channel.start_consuming()

